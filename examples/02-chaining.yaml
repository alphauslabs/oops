# This example demonstrates how you can do chaining tests in oops. The first run is basically
# the same as the first example without the shell section. The second run looks for the url
# value of the 'unlicense' array item from the first result and do another http GET. For the
# validations, it only checks if the status code is 200, then prints the output.
# Finally, display the file information (using the 'file' command) and then delete.

run:
- http:
    method: GET
    url: "https://api.github.com/licenses"
    headers:
      Accept: "application/vnd.github.v3+json"
    response_out: /tmp/licenses.json
    asserts:
      status_code: 200

- http:
    method: GET
    url: |
      #!/bin/bash
      echo -n "$(cat /tmp/licenses.json | jq -r '.[] | select(.key == "unlicense") | .url')"
    headers:
      Accept: "application/vnd.github.v3+json"
    response_out: /tmp/unlicense.json
    asserts:
      status_code: 200
      script: |
        #!/bin/bash
        cat /tmp/unlicense.json | jq

# Let's cleanup the files.
check: |
  #!/bin/bash
  file /tmp/licenses.json && rm /tmp/licenses.json
  file /tmp/unlicense.json && rm /tmp/unlicense.json
